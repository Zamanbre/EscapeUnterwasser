[
    {
        "id": "bc3f40f178b15cc3",
        "type": "tab",
        "label": "Ablauf",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "350f3f1be5bf834e",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8948a6a4ef7dcf1e",
        "type": "tab",
        "label": "RFID",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "063501cbf8d4d96b",
        "type": "group",
        "z": "350f3f1be5bf834e",
        "name": "System Events",
        "style": {
            "label": true
        },
        "nodes": [
            "aa84b0b3f6f24d4c",
            "e2d366190836429a",
            "758310f9eb5818de",
            "c7c4685c94a69e6f",
            "34e41184596a8cc2",
            "87d09c692b8687fc"
        ],
        "x": 34,
        "y": 79,
        "w": 302,
        "h": 202
    },
    {
        "id": "88186d2d626ead90",
        "type": "group",
        "z": "350f3f1be5bf834e",
        "name": "Configuration",
        "style": {
            "label": true
        },
        "nodes": [
            "c60ade8d2522e8b4",
            "42d9fcf53b80577d"
        ],
        "x": 374,
        "y": 79,
        "w": 312,
        "h": 82
    },
    {
        "id": "1d39f27b3d601c72",
        "type": "group",
        "z": "350f3f1be5bf834e",
        "name": "Game State",
        "style": {
            "label": true
        },
        "nodes": [
            "197160bd5c9b62c4",
            "0deb9fba3b6f3c48",
            "c1d322a0a9c2b4ac",
            "4a56258a14858018",
            "d2bfa31323cf7730",
            "98ab54042d4213d0",
            "342f119e8f4998e2",
            "890f86205d47ef77",
            "ef582930fa6e08ef",
            "4e6a3fb6ac8e60de",
            "4a863b19c2050c0a",
            "4f3e8b2d7209c3c4",
            "442e7bc38dd4c3b7",
            "06ef4faf69df41d0"
        ],
        "x": 34,
        "y": 319,
        "w": 672,
        "h": 202
    },
    {
        "id": "c870415b6658eca9",
        "type": "group",
        "z": "350f3f1be5bf834e",
        "name": "Timer",
        "style": {
            "label": true
        },
        "nodes": [
            "4a9c0dfb1f0b9b85",
            "c8fb5887561b01d3",
            "39e77fdf6d2e5543",
            "75a596869f308dab",
            "e7252fb6a4819ecf",
            "f457b1998a5d01b9",
            "2ce811328a35a524",
            "a98c2ab0de57b58a",
            "32180624627a2049",
            "f93150b86a48dd2b",
            "0c9d3ef3bf7c7bc0",
            "465e64fa2453bb6a",
            "6e87bf8ee8b2ac47",
            "f020309c907b1b75",
            "59b3354d12a64752",
            "65c75d67cdeec25c"
        ],
        "x": 34,
        "y": 559,
        "w": 812,
        "h": 342
    },
    {
        "id": "1f4858029cf46f27",
        "type": "group",
        "z": "bc3f40f178b15cc3",
        "name": "Finale Button",
        "style": {
            "label": true
        },
        "nodes": [
            "1cb8410f1e8faed8",
            "33594149ba6f023e",
            "328bab6004f0eb10",
            "f20ce2e56b374556",
            "5c4b4104d87193de",
            "d50f6585c7c521e4",
            "3697c0b81e0b8ff9",
            "f03df95382fdf2dc",
            "383ca25591a63b81",
            "113cb15c1a22398d"
        ],
        "x": 34,
        "y": 379,
        "w": 1132,
        "h": 202
    },
    {
        "id": "55e685e151f9f9c1",
        "type": "group",
        "z": "8948a6a4ef7dcf1e",
        "name": "Initial state set on system startup / reset",
        "style": {
            "label": true
        },
        "nodes": [
            "4f2cb677018e5d33",
            "bed94e902980cb18",
            "51ab8348be5b58cf",
            "7b58c1a138c2a169",
            "20f8fe92c57f2a47"
        ],
        "x": 94,
        "y": 79,
        "w": 462,
        "h": 122
    },
    {
        "id": "6dbccf9667d72cd6",
        "type": "group",
        "z": "8948a6a4ef7dcf1e",
        "name": "Receive updates from device",
        "style": {
            "label": true
        },
        "nodes": [
            "a4d2c50e82d07069",
            "5dac793941f9bdaf",
            "fd56eb6863a75c1b",
            "e6662604babed64b",
            "79be3ce9caab715b",
            "f35f546872893f6d",
            "511478a2217e4a68",
            "e5a8c202d72c5260",
            "d93f616645ffc5cc",
            "aeef84180beafedd",
            "826c8cf733f83538"
        ],
        "x": 84,
        "y": 239,
        "w": 972,
        "h": 282
    },
    {
        "id": "35dc1e95a005de89",
        "type": "group",
        "z": "8948a6a4ef7dcf1e",
        "name": "Send updates to device",
        "style": {
            "label": true
        },
        "nodes": [
            "f7ac75f6efd39b47",
            "9ae8c2c78a7385ae",
            "3530cf515724b043",
            "5198988f8b4f8b72",
            "16a25359d658fce7",
            "d2d8ecfde5c273f7",
            "55d2b6313674efef",
            "a8be836e11f594a6",
            "d0a5095287c98b3c",
            "10725234784d0cbc",
            "a4f4a6e912007e09",
            "4410ad14d4e845dc",
            "de1385d0f191df8c",
            "f9576d88f7e663eb",
            "c47a2ca299ce8ca9",
            "70d24f88d8b4ea3c",
            "79964d0e6edbc4dd",
            "c41d5f16944afdd7",
            "f97bf4f63f641489"
        ],
        "x": 1084,
        "y": 259,
        "w": 422,
        "h": 502
    },
    {
        "id": "b89c7309d613404b",
        "type": "group",
        "z": "8948a6a4ef7dcf1e",
        "name": "Dashboard controls",
        "style": {
            "label": true
        },
        "nodes": [
            "181ecb4a7e23599d",
            "38aaa24a3de7b652",
            "59cafd603264a238",
            "e9a1c77c1a8ec14c",
            "f06b417a070bcf1d",
            "f508c9915073f0da",
            "d432cb07646721dc",
            "9786668a7af749bd"
        ],
        "x": 94,
        "y": 559,
        "w": 542,
        "h": 202
    },
    {
        "id": "d173516205cc3110",
        "type": "group",
        "z": "8948a6a4ef7dcf1e",
        "name": "Game Events",
        "style": {
            "label": true
        },
        "nodes": [
            "fef841043eafc893",
            "aa844a4dcbd6492c",
            "17fe312a1b425904",
            "e1d35e1a8709c49d"
        ],
        "x": 584,
        "y": 79,
        "w": 432,
        "h": 82
    },
    {
        "id": "f08ba3d0ec182a89",
        "type": "ui_group",
        "name": "Game Control",
        "tab": "a38c3d325d960343",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a38c3d325d960343",
        "type": "ui_tab",
        "name": "Main",
        "icon": "dashboard",
        "order": 0,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "45013fdfd43f76cb",
        "type": "ui_spacer",
        "z": "350f3f1be5bf834e",
        "name": "spacer",
        "group": "f08ba3d0ec182a89",
        "order": 6,
        "width": "6",
        "height": "1"
    },
    {
        "id": "3a054ffea2c5314f",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "8396df2f5978da6f",
        "type": "mqtt-broker",
        "name": "MQTT Server",
        "broker": "localhost",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d02b7f3c5e5df6dc",
        "type": "serial-port",
        "serialport": "COM5",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "bc988420b6a0a649",
        "type": "websocket-listener",
        "path": "/ws/input",
        "wholemsg": "false"
    },
    {
        "id": "ddc4c194acf07958",
        "type": "ui_group",
        "name": "Connect the Wires",
        "tab": "a38c3d325d960343",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8f886ae1479c4797",
        "type": "ui_group",
        "name": "Button",
        "tab": "a38c3d325d960343",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "125f6c81.60151b",
        "type": "mqtt-broker",
        "name": "MQTT Server",
        "broker": "localhost",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4e976676.9e1538",
        "type": "websocket-listener",
        "path": "/ws/input",
        "wholemsg": "false"
    },
    {
        "id": "712f4f6179783e86",
        "type": "ui_group",
        "name": "Cover Up",
        "tab": "a38c3d325d960343",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "af93c53b4bbc79b1",
        "type": "ui_group",
        "name": "Finale Button",
        "tab": "a38c3d325d960343",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "85af954bd285e250",
        "type": "serial-port",
        "serialport": "COM4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "1cb8410f1e8faed8",
        "type": "rpi-gpio in",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "pin": "4",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 110,
        "y": 460,
        "wires": [
            [
                "328bab6004f0eb10"
            ]
        ]
    },
    {
        "id": "33594149ba6f023e",
        "type": "ui_switch",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "label": "Großer roter Knopf",
        "tooltip": "",
        "group": "af93c53b4bbc79b1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 470,
        "y": 460,
        "wires": [
            [
                "3697c0b81e0b8ff9"
            ]
        ]
    },
    {
        "id": "328bab6004f0eb10",
        "type": "change",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "1",
                "fromt": "num",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "0",
                "fromt": "num",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 460,
        "wires": [
            [
                "33594149ba6f023e"
            ]
        ]
    },
    {
        "id": "f20ce2e56b374556",
        "type": "change",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "elapsedTimeDelta",
                "pt": "global",
                "to": "$globalContext('elapsedTimeDelta') + $millis() - $flowContext('startTime')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 460,
        "wires": [
            [
                "d50f6585c7c521e4"
            ]
        ]
    },
    {
        "id": "5c4b4104d87193de",
        "type": "switch",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 460,
        "wires": [
            [
                "f20ce2e56b374556"
            ]
        ]
    },
    {
        "id": "d50f6585c7c521e4",
        "type": "link out",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "On Game Stop",
        "mode": "link",
        "links": [
            "75a596869f308dab"
        ],
        "x": 1125,
        "y": 460,
        "wires": []
    },
    {
        "id": "3697c0b81e0b8ff9",
        "type": "switch",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "nur true",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "5c4b4104d87193de",
                "113cb15c1a22398d"
            ]
        ]
    },
    {
        "id": "f03df95382fdf2dc",
        "type": "comment",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "Spiel Stoppen",
        "info": "",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "383ca25591a63b81",
        "type": "play audio",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "Ansage",
        "voice": "0",
        "x": 960,
        "y": 540,
        "wires": []
    },
    {
        "id": "113cb15c1a22398d",
        "type": "switch",
        "z": "bc3f40f178b15cc3",
        "g": "1f4858029cf46f27",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Ihr habt es geschafft! Ihr habt das Notfallprotokoll aktiviert. Nun fahren sich die übrigen Schutzsysteme hoch und die Station ist gerettet!",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 830,
        "y": 540,
        "wires": [
            [
                "383ca25591a63b81"
            ]
        ]
    },
    {
        "id": "4a56258a14858018",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "playing",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "startTime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 360,
        "wires": [
            [
                "ef582930fa6e08ef"
            ]
        ]
    },
    {
        "id": "d2bfa31323cf7730",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "elapsedTimeDelta",
                "pt": "global",
                "to": "$globalContext('elapsedTimeDelta') + $millis() - $flowContext('startTime')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "4a863b19c2050c0a"
            ]
        ]
    },
    {
        "id": "98ab54042d4213d0",
        "type": "switch",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "playing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 360,
        "wires": [
            [
                "4a56258a14858018"
            ]
        ]
    },
    {
        "id": "342f119e8f4998e2",
        "type": "switch",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 420,
        "wires": [
            [
                "d2bfa31323cf7730"
            ]
        ]
    },
    {
        "id": "890f86205d47ef77",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "elapsedTimeDelta",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "global",
                "to": "gameDuration",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "startTime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "timeElapsed",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 480,
        "wires": [
            [
                "442e7bc38dd4c3b7"
            ]
        ]
    },
    {
        "id": "c60ade8d2522e8b4",
        "type": "function",
        "z": "350f3f1be5bf834e",
        "g": "88186d2d626ead90",
        "name": "Initialise Global Vars",
        "func": "global.set(\"gameState\", \"stopped\");\nglobal.set(\"gameDuration\", 3600000);\nglobal.set(\"elapsedTimeDelta\", 0);\nglobal.set(\"timeElapsed\", 0);\nglobal.set(\"timeRemaining\", 3600000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 120,
        "wires": [
            [
                "cd9c79c0f7ca4c12"
            ]
        ]
    },
    {
        "id": "42d9fcf53b80577d",
        "type": "link in",
        "z": "350f3f1be5bf834e",
        "g": "88186d2d626ead90",
        "name": "",
        "links": [
            "758310f9eb5818de"
        ],
        "x": 415,
        "y": 120,
        "wires": [
            [
                "c60ade8d2522e8b4"
            ]
        ]
    },
    {
        "id": "ef582930fa6e08ef",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Start",
        "links": [
            "65781ff6.32997",
            "f64afdb2.ae6738",
            "75a596869f308dab",
            "fde61d47216f1287"
        ],
        "x": 495,
        "y": 360,
        "wires": []
    },
    {
        "id": "4e6a3fb6ac8e60de",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Start",
        "info": "",
        "x": 600,
        "y": 360,
        "wires": []
    },
    {
        "id": "4a863b19c2050c0a",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Stop",
        "mode": "link",
        "links": [
            "75a596869f308dab"
        ],
        "x": 495,
        "y": 420,
        "wires": []
    },
    {
        "id": "4f3e8b2d7209c3c4",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Stop",
        "info": "",
        "x": 600,
        "y": 420,
        "wires": []
    },
    {
        "id": "442e7bc38dd4c3b7",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Reset",
        "links": [
            "b72df54c.54dbc8",
            "f476429e.39f778",
            "fad501df9730e3cd",
            "5051fca6f0fc24ce",
            "771ef7315cbeaed4",
            "6aa55bc0969c2645",
            "f64afdb2.ae6738",
            "27a13ceb38ba3113",
            "b24d6dd76f244e1c",
            "561c4af966865974",
            "75a596869f308dab",
            "fde61d47216f1287"
        ],
        "x": 495,
        "y": 480,
        "wires": []
    },
    {
        "id": "05b37843628a96bf",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "name": "Main Flow",
        "info": "This flow contains nodes that define the overall configuration and monitor state of the system.\n",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "aa84b0b3f6f24d4c",
        "type": "inject",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "Every second",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "c7c4685c94a69e6f"
            ]
        ]
    },
    {
        "id": "e2d366190836429a",
        "type": "inject",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "On Initialisation",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Initialise",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "758310f9eb5818de"
            ]
        ]
    },
    {
        "id": "758310f9eb5818de",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "On System Start",
        "links": [
            "ce5e1241.adb708",
            "891fa554.e2eb",
            "42d9fcf53b80577d",
            "a42117f2.e7b908",
            "b382fdf1.42dfd",
            "753e49af.e1fbf8",
            "ab728aab.10a15",
            "7a212126.b73c78",
            "bca49e2.3ae506",
            "fec95a4b.bb6bf",
            "84bae66b.0b1488",
            "91f5a57b8686c80a",
            "46aaa4960e9ac869",
            "e4bbd5899d3b356e",
            "f64afdb2.ae6738",
            "7fd4506cfed2714b",
            "c4a8de8b032253c9",
            "d22e738b256cdec6"
        ],
        "x": 295,
        "y": 120,
        "wires": []
    },
    {
        "id": "c7c4685c94a69e6f",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "On Tick",
        "links": [
            "81cfa1d4.86b898",
            "75a596869f308dab",
            "d9928e8d.c5c588",
            "c0f514cb.a0e9c8",
            "e1535ac3.a19198",
            "e4a697a8.359b38",
            "8bdfc662.b74d28",
            "fde61d47216f1287"
        ],
        "x": 295,
        "y": 180,
        "wires": []
    },
    {
        "id": "87d09c692b8687fc",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "On Browser Refresh",
        "mode": "link",
        "links": [],
        "x": 295,
        "y": 240,
        "wires": []
    },
    {
        "id": "e364bd8ab15e99bb",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "name": "Dashboard Styling",
        "info": "",
        "x": 990,
        "y": 101,
        "wires": []
    },
    {
        "id": "a16e88a8d5c65b16",
        "type": "catch",
        "z": "350f3f1be5bf834e",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 940,
        "y": 260,
        "wires": [
            [
                "c02c1b80ce61d7d7"
            ]
        ]
    },
    {
        "id": "c02c1b80ce61d7d7",
        "type": "debug",
        "z": "350f3f1be5bf834e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 280,
        "wires": []
    },
    {
        "id": "a4e1b2d5ee32da8d",
        "type": "complete",
        "z": "350f3f1be5bf834e",
        "name": "",
        "scope": [
            "4a863b19c2050c0a"
        ],
        "uncaught": false,
        "x": 950,
        "y": 300,
        "wires": [
            [
                "c02c1b80ce61d7d7"
            ]
        ]
    },
    {
        "id": "21156e9a382b1245",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "name": "Exception Handling",
        "info": "",
        "x": 990,
        "y": 220,
        "wires": []
    },
    {
        "id": "cd9c79c0f7ca4c12",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "name": "On System Start",
        "links": [
            "ce5e1241.adb708",
            "891fa554.e2eb",
            "a42117f2.e7b908",
            "b382fdf1.42dfd",
            "753e49af.e1fbf8",
            "ab728aab.10a15",
            "7a212126.b73c78",
            "bca49e2.3ae506",
            "fec95a4b.bb6bf",
            "84bae66b.0b1488",
            "91f5a57b8686c80a",
            "46aaa4960e9ac869",
            "e4bbd5899d3b356e",
            "f64afdb2.ae6738",
            "7fd4506cfed2714b",
            "c4a8de8b032253c9",
            "d22e738b256cdec6",
            "75a596869f308dab",
            "fde61d47216f1287"
        ],
        "x": 695,
        "y": 120,
        "wires": []
    },
    {
        "id": "06ef4faf69df41d0",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "On Game Reset",
        "info": "",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "4a9c0dfb1f0b9b85",
        "type": "function",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "Update Timer",
        "func": "// Retrieve current state of global timer variables\nvar gameState = global.get(\"gameState\") || 'playing';\nvar gameDuration = global.get(\"gameDuration\") || 0;\nvar elapsedTimeDelta = global.get(\"elapsedTimeDelta\") || 0;\n// Total time elapsed is duration since the start button was last pressed, + any adjustments\nvar timeElapsed = global.get(\"timeElapsed\") || 0;\nvar startTime = flow.get(\"startTime\") || 0;\n\n// If the game is active, update the time elapsed\nif(gameState == \"playing\") {\n\n    // Total time elapsed is duration since the start button was last pressed, + any adjustments\n    timeElapsed = (Date.now() - startTime);\n\n    // Update the global variable\n    global.set(\"timeElapsed\", timeElapsed);\n}\n\n// We update these even if gameState is not playing, to allow for\n// adjustments to gameDuration or timeElapsed made when game is stopped\nvar timeElapsedAfterAdjustments = timeElapsed += elapsedTimeDelta;\nvar timeRemaining = gameDuration - timeElapsed;\n\nglobal.set(\"timeRemaining\", timeRemaining);\n\nnode.status({ fill: \"green\", shape: \"dot\", text: timeRemaining });\n\n// Update the msg to carry string\nmsg.timeElapsed = timeElapsedAfterAdjustments;        \nmsg.timeRemaining = timeRemaining;\n\n// Only need to update UI if timeRemaining has changed\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 600,
        "wires": [
            [
                "39e77fdf6d2e5543"
            ]
        ]
    },
    {
        "id": "39e77fdf6d2e5543",
        "type": "function",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "Format Time for Dashboard Display",
        "func": "// Create formattedTime in hh:mm:ss\nvar t = msg.timeElapsed / 1000; //ms\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\nmsg.formattedTimeElapsed = (\"0\" + h).slice(-2) + \":\" + (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2);\n\nvar t2 = msg.timeRemaining / 1000; //ms\nvar h2 = Math.floor(t2 / 3600);\nvar m2 = Math.floor(t2 % 3600 / 60);\nvar s2 = Math.floor(t2 % 3600 % 60);\nmsg.formattedTimeRemaining = (\"0\" + h2).slice(-2) + \":\" + (\"0\" + m2).slice(-2) + \":\" + (\"0\" + s2).slice(-2);\n\nvar t3 = global.get(\"gameDuration\") / 1000; //ms\nvar h3 = Math.floor(t3 / 3600);\nvar m3 = Math.floor(t3 % 3600 / 60);\nvar s3 = Math.floor(t3 % 3600 % 60);\nmsg.formattedGameDuration = (\"0\" + h3).slice(-2) + \":\" + (\"0\" + m3).slice(-2) + \":\" + (\"0\" + s3).slice(-2);\n\n// Set timeColour depending on current gamestate and time remaining\nvar gameState = global.get(\"gameState\");\nif (gameState == \"playing\") {\n    if (msg.timeRemaining < 60000) { msg.timeColour = \"red\"; }\n    else { msg.timeColour = \"green\"; }\n}\nelse { msg.timeColour = \"white\"; }\n\n// Update the editor node\nnode.status({ fill: msg.timeColour, shape:\"dot\", text:msg.formattedTimeRemaining});\n\n// Forward the message along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 600,
        "wires": [
            [
                "c8fb5887561b01d3",
                "f93150b86a48dd2b",
                "59b3354d12a64752"
            ]
        ]
    },
    {
        "id": "75a596869f308dab",
        "type": "link in",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "links": [
            "c7c4685c94a69e6f",
            "ef582930fa6e08ef",
            "4a863b19c2050c0a",
            "442e7bc38dd4c3b7",
            "cd9c79c0f7ca4c12",
            "32180624627a2049",
            "d50f6585c7c521e4"
        ],
        "x": 85,
        "y": 600,
        "wires": [
            [
                "4a9c0dfb1f0b9b85"
            ]
        ]
    },
    {
        "id": "2ce811328a35a524",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameDuration",
                "pt": "global",
                "to": "$globalContext('gameDuration') + (5000 * 60)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 740,
        "wires": [
            [
                "32180624627a2049"
            ]
        ]
    },
    {
        "id": "a98c2ab0de57b58a",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameDuration",
                "pt": "global",
                "to": "$globalContext('gameDuration') - (5000 * 60)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 780,
        "wires": [
            [
                "32180624627a2049"
            ]
        ]
    },
    {
        "id": "32180624627a2049",
        "type": "link out",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "On Time Adjust",
        "mode": "link",
        "links": [
            "75a596869f308dab"
        ],
        "x": 535,
        "y": 800,
        "wires": []
    },
    {
        "id": "0c9d3ef3bf7c7bc0",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "elapsedTimeDelta",
                "pt": "global",
                "to": "$globalContext('elapsedTimeDelta') + (5000 * 60)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 820,
        "wires": [
            [
                "32180624627a2049"
            ]
        ]
    },
    {
        "id": "6e87bf8ee8b2ac47",
        "type": "change",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "elapsedTimeDelta",
                "pt": "global",
                "to": "$globalContext('elapsedTimeDelta') - (5000 * 60)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 860,
        "wires": [
            [
                "32180624627a2049"
            ]
        ]
    },
    {
        "id": "65c75d67cdeec25c",
        "type": "comment",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "Adjustments to game duration or time taken",
        "info": "",
        "x": 230,
        "y": 700,
        "wires": []
    },
    {
        "id": "197160bd5c9b62c4",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 5,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-play",
        "payload": "{\"msg\":{\"payload\":\"gamestart\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "98ab54042d4213d0"
            ]
        ]
    },
    {
        "id": "0deb9fba3b6f3c48",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 3,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-stop",
        "payload": "{     \"payload\": \"cancel\" }",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "342f119e8f4998e2"
            ]
        ]
    },
    {
        "id": "c1d322a0a9c2b4ac",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "1d39f27b3d601c72",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "fa-fast-backward",
        "payload": "{\"timeout\": 600 }",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 480,
        "wires": [
            [
                "890f86205d47ef77"
            ]
        ]
    },
    {
        "id": "e7252fb6a4819ecf",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 9,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "+5min",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "className": "",
        "icon": "fa-plus",
        "payload": "{\"msg\":{\"payload\":\"add5\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "2ce811328a35a524"
            ]
        ]
    },
    {
        "id": "f457b1998a5d01b9",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 7,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "-5min",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "fa-minus",
        "payload": "{\"msg\":{\"payload\":\"deduct5\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 780,
        "wires": [
            [
                "a98c2ab0de57b58a"
            ]
        ]
    },
    {
        "id": "465e64fa2453bb6a",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 12,
        "width": "2",
        "height": 1,
        "passthru": true,
        "label": "+5min",
        "tooltip": "",
        "color": "",
        "bgcolor": "#999999",
        "className": "",
        "icon": "fa-plus",
        "payload": "{\"msg\":{\"payload\":\"add5\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 820,
        "wires": [
            [
                "0c9d3ef3bf7c7bc0"
            ]
        ]
    },
    {
        "id": "f020309c907b1b75",
        "type": "ui_button",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "name": "",
        "group": "f08ba3d0ec182a89",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "-5min",
        "tooltip": "",
        "color": "",
        "bgcolor": "#999999",
        "className": "",
        "icon": "fa-minus",
        "payload": "{\"msg\":{\"payload\":\"deduct5\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "topicType": "str",
        "x": 110,
        "y": 860,
        "wires": [
            [
                "6e87bf8ee8b2ac47"
            ]
        ]
    },
    {
        "id": "f93150b86a48dd2b",
        "type": "ui_text",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "group": "f08ba3d0ec182a89",
        "order": 8,
        "width": "2",
        "height": "1",
        "name": "Game Duration",
        "label": "Duration",
        "format": "{{msg.formattedGameDuration}}",
        "layout": "col-center",
        "className": "",
        "x": 740,
        "y": 680,
        "wires": []
    },
    {
        "id": "59b3354d12a64752",
        "type": "ui_text",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "group": "f08ba3d0ec182a89",
        "order": 11,
        "width": "2",
        "height": "1",
        "name": "Time Elapsed",
        "label": "Elapsed",
        "format": "{{msg.formattedTimeElapsed}}",
        "layout": "col-center",
        "className": "",
        "x": 740,
        "y": 640,
        "wires": []
    },
    {
        "id": "34e41184596a8cc2",
        "type": "ui_ui_control",
        "z": "350f3f1be5bf834e",
        "g": "063501cbf8d4d96b",
        "name": "On Browser Refresh",
        "events": "all",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "87d09c692b8687fc"
            ]
        ]
    },
    {
        "id": "0b46b07651aabd95",
        "type": "ui_template",
        "z": "350f3f1be5bf834e",
        "group": "f08ba3d0ec182a89",
        "name": "CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n    /* Don't let title expand */\n    md-card md-card-title {\n        flex: 0 0 auto !important;\n    }\n\n    /* Don't show scrollbars */\n    .nr-dashboard-template {\n        overflow-y: hidden !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 1000,
        "y": 140,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "c8fb5887561b01d3",
        "type": "ui_template",
        "z": "350f3f1be5bf834e",
        "g": "c870415b6658eca9",
        "group": "f08ba3d0ec182a89",
        "name": "Time Remaining",
        "order": 2,
        "width": "6",
        "height": "3",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">Time Remaining</p>\n    </md-card-title-text>\n    <span ng-class=\"'fa fa-clock-o fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <div style=\"text-align:center\">\n        <span class=\"value\" style=\"color:{{msg.timeColour}}; font-size:3em;\">\n            {{msg.formattedTimeRemaining}}\n        </span>\n    </div>\n</md-card-content>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 740,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "d93f616645ffc5cc",
        "type": "json",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 610,
        "y": 360,
        "wires": [
            [
                "aeef84180beafedd"
            ]
        ]
    },
    {
        "id": "aeef84180beafedd",
        "type": "function",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "Parse JSON and update stored state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 360,
        "wires": [
            [
                "826c8cf733f83538"
            ]
        ]
    },
    {
        "id": "181ecb4a7e23599d",
        "type": "ui_button",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "RESET",
        "group": "8f886ae1479c4797",
        "order": 2,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-lock",
        "payload": "{\"command\":\"RESET\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 180,
        "y": 720,
        "wires": [
            [
                "e9a1c77c1a8ec14c"
            ]
        ]
    },
    {
        "id": "38aaa24a3de7b652",
        "type": "ui_button",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "SOLVE",
        "group": "8f886ae1479c4797",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-unlock",
        "payload": "{\"command\":\"SOLVE\"}",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "59cafd603264a238"
            ]
        ]
    },
    {
        "id": "4f2cb677018e5d33",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "55e685e151f9f9c1",
        "name": "Configuration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"RFID-1\",\"name\":\"RFID\",\"description\":\"Players must scan the correct RFID tag\",\"state\":\"UNSOLVED\",\"ip\":\"0.0.0.0\",\"port\":\"23\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 140,
        "wires": [
            [
                "20f8fe92c57f2a47"
            ]
        ]
    },
    {
        "id": "bed94e902980cb18",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "55e685e151f9f9c1",
        "name": "On Initialisation",
        "links": [
            "758310f9eb5818de"
        ],
        "x": 135,
        "y": 120,
        "wires": [
            [
                "4f2cb677018e5d33"
            ]
        ]
    },
    {
        "id": "a4d2c50e82d07069",
        "type": "mqtt in",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "MQTT FromDevice",
        "topic": "",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "125f6c81.60151b",
        "nl": false,
        "rap": false,
        "inputs": 1,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "5dac793941f9bdaf",
        "type": "udp in",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "6dbccf9667d72cd6",
        "name": "",
        "iface": "",
        "port": "161",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 420,
        "y": 320,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "fd56eb6863a75c1b",
        "type": "tcp in",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "6dbccf9667d72cd6",
        "name": "",
        "server": "server",
        "host": "",
        "port": "80",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 430,
        "y": 400,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "e6662604babed64b",
        "type": "serial in",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "6dbccf9667d72cd6",
        "name": "",
        "serial": "85af954bd285e250",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "79be3ce9caab715b",
        "type": "websocket in",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "6dbccf9667d72cd6",
        "name": "",
        "server": "4e976676.9e1538",
        "client": "",
        "x": 410,
        "y": 440,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "f35f546872893f6d",
        "type": "http in",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "6dbccf9667d72cd6",
        "name": "",
        "url": "/FromDevice",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "d93f616645ffc5cc"
            ]
        ]
    },
    {
        "id": "f7ac75f6efd39b47",
        "type": "mqtt out",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "MQTT ToDevice",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "125f6c81.60151b",
        "x": 1400,
        "y": 300,
        "wires": []
    },
    {
        "id": "9ae8c2c78a7385ae",
        "type": "tcp out",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "35dc1e95a005de89",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 1430,
        "y": 540,
        "wires": []
    },
    {
        "id": "3530cf515724b043",
        "type": "serial out",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "35dc1e95a005de89",
        "name": "",
        "serial": "",
        "x": 1430,
        "y": 380,
        "wires": []
    },
    {
        "id": "5198988f8b4f8b72",
        "type": "udp out",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "16a25359d658fce7",
        "type": "websocket out",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "35dc1e95a005de89",
        "name": "",
        "server": "4e976676.9e1538",
        "client": "",
        "x": 1400,
        "y": 620,
        "wires": []
    },
    {
        "id": "d2d8ecfde5c273f7",
        "type": "http request",
        "z": "8948a6a4ef7dcf1e",
        "d": true,
        "g": "35dc1e95a005de89",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1410,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "51ab8348be5b58cf",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "55e685e151f9f9c1",
        "name": "On Reset",
        "links": [
            "c9289f5e.1fb3b8",
            "4f97d4b38ed5c552"
        ],
        "x": 135,
        "y": 160,
        "wires": [
            [
                "4f2cb677018e5d33"
            ]
        ]
    },
    {
        "id": "fef841043eafc893",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "d173516205cc3110",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "RESET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 120,
        "wires": [
            [
                "17fe312a1b425904"
            ]
        ]
    },
    {
        "id": "55d2b6313674efef",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "Set Target IP and Port",
        "rules": [
            {
                "t": "set",
                "p": "ip",
                "pt": "msg",
                "to": "payload.ip",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "payload.port",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 440,
        "wires": [
            [
                "5198988f8b4f8b72"
            ]
        ]
    },
    {
        "id": "f508c9915073f0da",
        "type": "link out",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "18404cad9ee52512",
            "f9576d88f7e663eb",
            "c47a2ca299ce8ca9",
            "70d24f88d8b4ea3c",
            "79964d0e6edbc4dd",
            "c41d5f16944afdd7",
            "f97bf4f63f641489"
        ],
        "x": 595,
        "y": 680,
        "wires": []
    },
    {
        "id": "511478a2217e4a68",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "Subscribe",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "subscribe",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "'FromDevice/' & $$.payload.id",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "a4d2c50e82d07069"
            ]
        ]
    },
    {
        "id": "a8be836e11f594a6",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "Set URL",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "'ToDevice/' & $flowContext('id')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 680,
        "wires": [
            [
                "d2d8ecfde5c273f7"
            ]
        ]
    },
    {
        "id": "d0a5095287c98b3c",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "Set Host and Port",
        "rules": [
            {
                "t": "set",
                "p": "host",
                "pt": "msg",
                "to": "payload.ip",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "port",
                "pt": "msg",
                "to": "payload.port",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "9ae8c2c78a7385ae"
            ]
        ]
    },
    {
        "id": "59cafd603264a238",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.id",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "SOLVE",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 660,
        "wires": [
            [
                "f06b417a070bcf1d"
            ]
        ]
    },
    {
        "id": "e9a1c77c1a8ec14c",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.id",
                "pt": "msg",
                "to": "payload.id",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.command",
                "pt": "msg",
                "to": "RESET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 720,
        "wires": [
            [
                "f06b417a070bcf1d"
            ]
        ]
    },
    {
        "id": "7b58c1a138c2a169",
        "type": "link out",
        "z": "8948a6a4ef7dcf1e",
        "g": "55e685e151f9f9c1",
        "name": "On Config Set",
        "mode": "link",
        "links": [
            "e5a8c202d72c5260",
            "80df62030689a0b8",
            "a0c1bac628768a7b",
            "10725234784d0cbc",
            "a4f4a6e912007e09",
            "4410ad14d4e845dc",
            "0e6a7ea34ed569b3",
            "9786668a7af749bd"
        ],
        "x": 515,
        "y": 140,
        "wires": []
    },
    {
        "id": "e5a8c202d72c5260",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "link in 2",
        "links": [
            "7b58c1a138c2a169"
        ],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "511478a2217e4a68"
            ]
        ]
    },
    {
        "id": "10725234784d0cbc",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 6",
        "links": [
            "7b58c1a138c2a169"
        ],
        "x": 1125,
        "y": 440,
        "wires": [
            [
                "55d2b6313674efef"
            ]
        ]
    },
    {
        "id": "a4f4a6e912007e09",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 7",
        "links": [
            "7b58c1a138c2a169"
        ],
        "x": 1145,
        "y": 520,
        "wires": [
            [
                "d0a5095287c98b3c"
            ]
        ]
    },
    {
        "id": "4410ad14d4e845dc",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 8",
        "links": [
            "7b58c1a138c2a169"
        ],
        "x": 1165,
        "y": 680,
        "wires": [
            [
                "a8be836e11f594a6"
            ]
        ]
    },
    {
        "id": "20f8fe92c57f2a47",
        "type": "function",
        "z": "8948a6a4ef7dcf1e",
        "g": "55e685e151f9f9c1",
        "name": "Store",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "7b58c1a138c2a169"
            ]
        ]
    },
    {
        "id": "de1385d0f191df8c",
        "type": "change",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "Set Topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "'ToDevice/' & $flowContext('payload.id')",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 300,
        "wires": [
            [
                "f7ac75f6efd39b47"
            ]
        ]
    },
    {
        "id": "f06b417a070bcf1d",
        "type": "json",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 510,
        "y": 680,
        "wires": [
            [
                "f508c9915073f0da"
            ]
        ]
    },
    {
        "id": "f9576d88f7e663eb",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 9",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1145,
        "y": 300,
        "wires": [
            [
                "de1385d0f191df8c"
            ]
        ]
    },
    {
        "id": "c47a2ca299ce8ca9",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 10",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1345,
        "y": 380,
        "wires": [
            [
                "3530cf515724b043"
            ]
        ]
    },
    {
        "id": "70d24f88d8b4ea3c",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 11",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1345,
        "y": 480,
        "wires": [
            [
                "5198988f8b4f8b72"
            ]
        ]
    },
    {
        "id": "79964d0e6edbc4dd",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 12",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1345,
        "y": 560,
        "wires": [
            [
                "9ae8c2c78a7385ae"
            ]
        ]
    },
    {
        "id": "c41d5f16944afdd7",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 13",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1305,
        "y": 720,
        "wires": [
            [
                "d2d8ecfde5c273f7"
            ]
        ]
    },
    {
        "id": "f97bf4f63f641489",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "35dc1e95a005de89",
        "name": "link in 14",
        "links": [
            "f508c9915073f0da",
            "e1d35e1a8709c49d"
        ],
        "x": 1285,
        "y": 620,
        "wires": [
            [
                "16a25359d658fce7"
            ]
        ]
    },
    {
        "id": "aa844a4dcbd6492c",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "d173516205cc3110",
        "name": "link in 15",
        "links": [],
        "x": 625,
        "y": 120,
        "wires": [
            [
                "fef841043eafc893"
            ]
        ]
    },
    {
        "id": "e1d35e1a8709c49d",
        "type": "link out",
        "z": "8948a6a4ef7dcf1e",
        "g": "d173516205cc3110",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "18404cad9ee52512",
            "f9576d88f7e663eb",
            "c47a2ca299ce8ca9",
            "70d24f88d8b4ea3c",
            "79964d0e6edbc4dd",
            "c41d5f16944afdd7",
            "f97bf4f63f641489"
        ],
        "x": 975,
        "y": 120,
        "wires": []
    },
    {
        "id": "17fe312a1b425904",
        "type": "json",
        "z": "8948a6a4ef7dcf1e",
        "g": "d173516205cc3110",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 890,
        "y": 120,
        "wires": [
            [
                "e1d35e1a8709c49d"
            ]
        ]
    },
    {
        "id": "d432cb07646721dc",
        "type": "ui_template",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "group": "8f886ae1479c4797",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n    <div style=\"text-align:center\">\n        <span style=\"font-size: 2em;\">{{msg.payload.input == '000000000000000' ? 'No Tag' : msg.payload.input}}&nbsp;</span>\n    </div>\n    <div style=\"height:60px;\">&nbsp;</div>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 390,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "826c8cf733f83538",
        "type": "link out",
        "z": "8948a6a4ef7dcf1e",
        "g": "6dbccf9667d72cd6",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "9786668a7af749bd"
        ],
        "x": 1015,
        "y": 360,
        "wires": []
    },
    {
        "id": "9786668a7af749bd",
        "type": "link in",
        "z": "8948a6a4ef7dcf1e",
        "g": "b89c7309d613404b",
        "name": "link in 29",
        "links": [
            "7b58c1a138c2a169",
            "826c8cf733f83538"
        ],
        "x": 265,
        "y": 600,
        "wires": [
            [
                "d432cb07646721dc"
            ]
        ]
    }
]